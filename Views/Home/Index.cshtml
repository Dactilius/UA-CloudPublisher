@using Opc.Ua.Cloud.Publisher.Models

@model HomeModel

@{
    ViewData["Title"] = "Welcome to the UA Cloud Publisher!";
}

<h1>@ViewData["Title"]</h1>
<br />
<p>
    Click <a href="https://microsoft.com/devicelogin" target="_blank">here</a> to use the code below for <b>Microsoft OneLake</b> authentication:<br />
    @Html.TextBox("AuthCode", @Model.AuthCode, new { style = "width:100%;background-color:grey;color:white;", @readonly = "true" })<br />
    <br />
    Note: UA Cloud Publisher will show up as Microsoft Azure Cross-platform Command Line Interface. When prompted "Are you trying to sign in to Microsoft Azure CLI?", select continue.<br />
</p>
<h3>Optional Environment Variables</h3>
<ul>
    <li>LOG_FILE_PATH - path to the log file to use. Default is ./logs/UACloudPublisher.log.</li>
    <li>STORAGE_TYPE - type of storage to use for settings and configuration files. Current options are "Azure". Default is local file storage (within the container).</li>
    <li>STORAGE_CONNECTION_STRING - when using STORAGE_TYPE, specifies the connection string to the cloud storage.</li>
    <li>USE_KAFKA - if present, use a Kafka broker instead of an MQTT broker to send messages to and receive commands from.</li>
</ul>
<br />
<h3>MQTT Sub-topics for Configuration from the Cloud</h3>
See the readme <a href="https://github.com/barnstee/UA-CloudPublisher#mqtt-sub-topics-for-configuration-from-the-cloud">here</a> for the payload configuration.
<br />
<br />
<ul>
    <li>PublishNodes</li>
    <li>UnpublishNodes</li>
    <li>UnpublishAllNodes</li>
    <li>GetPublishedNodes</li>
    <li>GetInfo</li>
</ul>

@using UA.MQTT.Publisher.Models

@model Settings

@{
    ViewData["Title"] = "Configuration";
}

<h1>@ViewData["Title"]</h1>
 
<form action="/Config/Update" method="post">
    <br />
    <p>
        Broker Client Name (<b>required</b>)<br />
        @Html.TextBox("BrokerClientName", @Model.BrokerClientName, new { style = "width:100%;" })<br />
    </p>
    <p>
        Broker URL (<b>required</b>)<br />
        @Html.TextBox("BrokerUrl", @Model.BrokerUrl, new { style = "width:100%;" })<br />
    </p>
    <p>
        Broker Port (<b>required</b>)<br />
        @Html.TextBox("BrokerPort", @Model.BrokerPort, new { style = "width:100%;" })<br />
    </p>
    <p>
        Broker Username (<b>required</b>)<br />
        @Html.TextBox("BrokerUsername", @Model.BrokerUsername, new { style = "width:100%;" })<br />
    </p>
    <p>
        Broker Password (<b>required</b>)<br />
        @Html.Password("BrokerPassword", @Model.BrokerPassword, new { style = "width:100%;" })<br />
    </p>
    <p>
        Broker Message Topic (<b>required</b>)<br />
        @Html.TextBox("BrokerMessageTopic", @Model.BrokerMessageTopic, new { style = "width:100%;" })<br />
    </p>
    <p>
        Broker Metadata Topic<br />
        @Html.TextBox("BrokerMetadataTopic", @Model.BrokerMetadataTopic, new { style = "width:100%;" })<br />
    </p>
     <p>
        Send OPC UA Metadata<br />
        @Html.CheckBox("SendUAMetadata", @Model.SendUAMetadata)<br />
    </p>
    <p>
        Metadata Send Interval in Seconds<br />
        @Html.TextBox("MetadataSendInterval", @Model.MetadataSendInterval, new { style = "width:100%;" })<br />
    </p>
     <p>
        Broker Command Topic (<b>required</b>)<br />
        @Html.TextBox("BrokerCommandTopic", @Model.BrokerCommandTopic, new { style = "width:100%;" })<br />
    </p>
    <p>
        Broker Command Response Topic (<b>required</b>)<br />
        @Html.TextBox("BrokerResponseTopic", @Model.BrokerResponseTopic, new { style = "width:100%;" })<br />
    </p>
    <p>
        Broker Message Size<br />
        @Html.TextBox("BrokerMessageSize", @Model.BrokerMessageSize, new { style = "width:100%;" })<br />
    </p>
    <p>
        Create Broker SAS Token<br />
        @Html.CheckBox("CreateBrokerSASToken", @Model.CreateBrokerSASToken)<br />
    </p>
     <p>
        Use TLS with Broker (when switching off TLS, you will most likely also need to update the MQTT Broker Port)<br />
        @Html.CheckBox("UseTLS", @Model.UseTLS)<br />
    </p>
    <p>
        Publisher Name<br />
        @Html.TextBox("PublisherName", @Model.PublisherName, new { style = "width:100%;" })<br />
    </p>
    <p>
        Internal Queue Capacity<br />
        @Html.TextBox("InternalQueueCapacity", @Model.InternalQueueCapacity, new { style = "width:100%;" })<br />
    </p>
    <p>
        Default Send Interval in Seconds<br />
        @Html.TextBox("DefaultSendIntervalSeconds", @Model.DefaultSendIntervalSeconds, new { style = "width:100%;" })<br />
    </p>
    <p>
        Diagnostics Logging Interval<br />
        @Html.TextBox("DiagnosticsLoggingInterval", @Model.DiagnosticsLoggingInterval, new { style = "width:100%;" })<br />
    </p>
    <p>
        Default OPC UA Sampling Interval<br />
        @Html.TextBox("DefaultOpcSamplingInterval", @Model.DefaultOpcSamplingInterval, new { style = "width:100%;" })<br />
    </p>
    <p>
        Default OPC UA Publishing Interval<br />
        @Html.TextBox("DefaultOpcPublishingInterval", @Model.DefaultOpcPublishingInterval, new { style = "width:100%;" })<br />
    </p>
    <p>
        OPC UA Stack Trace Mask<br />
        @Html.TextBox("UAStackTraceMask", @Model.UAStackTraceMask, new { style = "width:100%;" })<br />
    </p>
    <p>
        Use Reversible PubSub Encoding<br />
        @Html.CheckBox("ReversiblePubSubEncoding", @Model.ReversiblePubSubEncoding)<br />
    </p>
    <p>
        Auto-Load Previously Published Nodes on Startup<br />
        @Html.CheckBox("AutoLoadPersistedNodes", @Model.AutoLoadPersistedNodes)<br />
    </p>
    <p>
        <input type="submit" name="Update" value="Update" />
    </p>
</form>

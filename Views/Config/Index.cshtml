@using UA.MQTT.Publisher.Models

@model Settings

@{
    ViewData["Title"] = "Configuration";
}

<h1>@ViewData["Title"]</h1>
 
<form action="/Config/Update" method="post">
    <br />
    <p>
        MQTT Client Name (<b>required</b>, for Azure IoT Hub, this is the Device ID)<br />
        @Html.TextBox("MQTTClientName", @Model.MQTTClientName, new { style = "width:100%;" })<br />
    </p>
    <p>
        MQTT Broker URL (<b>required</b>, for Azure IoT Hub, this is the Azure IoT Hub Hostname)<br />
        @Html.TextBox("MQTTBrokerUrl", @Model.MQTTBrokerUrl, new { style = "width:100%;" })<br />
    </p>
    <p>
        MQTT Broker Port (<b>required</b>, for Azure IoT Hub, this is 8883)<br />
        @Html.TextBox("MQTTBrokerPort", @Model.MQTTBrokerPort, new { style = "width:100%;" })<br />
    </p>
    <p>
        MQTT Username (<b>required</b>, for Azure IoT Hub, this is [BrokerName]/[ClientName]/?api-version=2018-06-30)<br />
        @Html.TextBox("MQTTUsername", @Model.MQTTUsername, new { style = "width:100%;" })<br />
    </p>
    <p>
        MQTT Password (<b>required</b>, for Azure IoT Hub, this is the Device's Primary Key)<br />
        @Html.Password("MQTTPassword", @Model.MQTTPassword, new { style = "width:100%;" })<br />
    </p>
    <p>
        MQTT Message Topic (<b>required</b>, for Azure IoT Hub, this is devices/[ClientName]/messages/events/)<br />
        @Html.TextBox("MQTTMessageTopic", @Model.MQTTMessageTopic, new { style = "width:100%;" })<br />
    </p>
    <p>
        MQTT Metadata Topic (for Azure IoT Hub, this is also devices/[ClientName]/messages/events/)<br />
        @Html.TextBox("MQTTMetadataTopic", @Model.MQTTMetadataTopic, new { style = "width:100%;" })<br />
    </p>
     <p>
        Send OPC UA Metadata<br />
        @Html.CheckBox("SendUAMetadata", @Model.SendUAMetadata)<br />
    </p>
    <p>
        Metadata Send Interval in Seconds<br />
        @Html.TextBox("MetadataSendInterval", @Model.MetadataSendInterval, new { style = "width:100%;" })<br />
    </p>
     <p>
        MQTT Command Topic (<b>required</b>, for Azure IoT Hub, this is $iothub/methods/POST/#)<br />
        @Html.TextBox("MQTTCommandTopic", @Model.MQTTCommandTopic, new { style = "width:100%;" })<br />
    </p>
    <p>
        MQTT Command Response Topic (<b>required</b>, for Azure IoT Hub, this is $iothub/methods/res/{status}/?$rid={request id})<br />
        @Html.TextBox("MQTTResponseTopic", @Model.MQTTResponseTopic, new { style = "width:100%;" })<br />
    </p>
    <p>
        MQTT Message Size<br />
        @Html.TextBox("MQTTMessageSize", @Model.MQTTMessageSize, new { style = "width:100%;" })<br />
    </p>
    <p>
        Create MQTT SAS Token<br />
        @Html.CheckBox("CreateMQTTSASToken", @Model.CreateMQTTSASToken)<br />
    </p>
     <p>
        Use TLS with MQTT (when switching off TLS, you will most likely also need to update the MQTT Broker Port)<br />
        @Html.CheckBox("UseTLS", @Model.UseTLS)<br />
    </p>
    <p>
        Publisher Name<br />
        @Html.TextBox("PublisherName", @Model.PublisherName, new { style = "width:100%;" })<br />
    </p>
    <p>
        Internal Queue Capacity<br />
        @Html.TextBox("InternalQueueCapacity", @Model.InternalQueueCapacity, new { style = "width:100%;" })<br />
    </p>
    <p>
        Default Send Interval in Seconds<br />
        @Html.TextBox("DefaultSendIntervalSeconds", @Model.DefaultSendIntervalSeconds, new { style = "width:100%;" })<br />
    </p>
    <p>
        Diagnostics Logging Interval<br />
        @Html.TextBox("DiagnosticsLoggingInterval", @Model.DiagnosticsLoggingInterval, new { style = "width:100%;" })<br />
    </p>
    <p>
        Default OPC UA Sampling Interval<br />
        @Html.TextBox("DefaultOpcSamplingInterval", @Model.DefaultOpcSamplingInterval, new { style = "width:100%;" })<br />
    </p>
    <p>
        Default OPC UA Publishing Interval<br />
        @Html.TextBox("DefaultOpcPublishingInterval", @Model.DefaultOpcPublishingInterval, new { style = "width:100%;" })<br />
    </p>
    <p>
        OPC UA Stack Trace Mask<br />
        @Html.TextBox("UAStackTraceMask", @Model.UAStackTraceMask, new { style = "width:100%;" })<br />
    </p>
    <p>
        Use Reversible PubSub Encoding<br />
        @Html.CheckBox("ReversiblePubSubEncoding", @Model.ReversiblePubSubEncoding)<br />
    </p>
    <p>
        Auto-Load Persisted Nodes on Startup<br />
        @Html.CheckBox("AutoLoadPersistedNodes", @Model.AutoLoadPersistedNodes)<br />
    </p>
    <p>
        <input type="submit" name="Update" value="Update" />
    </p>
</form>

@using UA.MQTT.Publisher.Models

@model Settings

@{
    ViewData["Title"] = "Configuration";
}

<h1>@ViewData["Title"]</h1>
 
<form action="/Config/Update" method="post">
    <br />
    <p>
        MQTT Client Name (<b>required</b>, for Azure IoT Hub, this is the Device ID)<br />
        @Html.TextBox("MQTTClientName", @Model.MQTTClientName, new { style = "width:100%;" })<br />
    </p>
    <p>
        MQTT Broker Name (<b>required</b>, for Azure IoT Hub, this is the Azure IoT Hub Hostname)<br />
        @Html.TextBox("MQTTBrokerName", @Model.MQTTBrokerName, new { style = "width:100%;" })<br />
    </p>
    <p>
        MQTT Username (<b>required</b>, for Azure IoT Hub, this is [BrokerName]/[ClientName]/?api-version=2018-06-30)<br />
        @Html.TextBox("MQTTUsername", @Model.MQTTUsername, new { style = "width:100%;" })<br />
    </p>
    <p>
        MQTT Password (<b>required</b>, for Azure IoT Hub, this is the Device's Primary Key')<br />
        @Html.Password("MQTTPassword", @Model.MQTTPassword, new { style = "width:100%;" })<br />
    </p>
    <p>
        MQTT Topic (<b>required</b>, for Azure IoT Hub, this is devices/[ClientName]/messages/events/)<br />
        @Html.TextBox("MQTTTopic", @Model.MQTTTopic, new { style = "width:100%;" })<br />
    </p>
    <p>
        MQTT Response Topic (<b>required</b>, for Azure IoT Hub, this is $iothub/methods/res)<br />
        @Html.TextBox("MQTTResponseTopic", @Model.MQTTResponseTopic, new { style = "width:100%;" })<br />
    </p>
    <p>
        MQTT Message Size<br />
        @Html.TextBox("MQTTMessageSize", @Model.MQTTMessageSize, new { style = "width:100%;" })<br />
    </p>
    <p>
        Create MQTT SAS Token<br />
        @Html.CheckBox("CreateMQTTSASToken", @Model.CreateMQTTSASToken)<br />
    </p>
    <p>
        Publisher Name<br />
        @Html.TextBox("PublisherName", @Model.PublisherName, new { style = "width:100%;" })<br />
    </p>
    <p>
        Internal Queue Capacity<br />
        @Html.TextBox("InternalQueueCapacity", @Model.InternalQueueCapacity, new { style = "width:100%;" })<br />
    </p>
    <p>
        Default Send Interval in Seconds<br />
        @Html.TextBox("DefaultSendIntervalSeconds", @Model.DefaultSendIntervalSeconds, new { style = "width:100%;" })<br />
    </p>
    <p>
        Diagnostics Logging Interval<br />
        @Html.TextBox("DiagnosticsLoggingInterval", @Model.DiagnosticsLoggingInterval, new { style = "width:100%;" })<br />
    </p>
    <p>
        Default OPC UA Sampling Interval<br />
        @Html.TextBox("DefaultOpcSamplingInterval", @Model.DefaultOpcSamplingInterval, new { style = "width:100%;" })<br />
    </p>
    <p>
        Default OPC UA Publishing Interval<br />
        @Html.TextBox("DefaultOpcPublishingInterval", @Model.DefaultOpcPublishingInterval, new { style = "width:100%;" })<br />
    </p>
    <p>
        OPC UA Stack Trace Mask<br />
        @Html.TextBox("UAStackTraceMask", @Model.UAStackTraceMask, new { style = "width:100%;" })<br />
    </p>
    <p>
        Use Reversible PubSub Encoding<br />
        @Html.CheckBox("ReversiblePubSubEncoding", @Model.ReversiblePubSubEncoding)<br />
    </p>
    <p>
        <input type="submit" name="Update" value="Update" />
    </p>
</form>
